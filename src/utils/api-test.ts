// Utilidad para probar la conexi√≥n con el backend
// Permite verificar que la API est√© funcionando correctamente

import { homeServices } from '@domain/home/home.service';

/**
 * Funci√≥n para probar la conexi√≥n con el backend
 * @returns Promise<boolean> - true si la conexi√≥n es exitosa, false en caso contrario
 */
export const testBackendConnection = async (): Promise<boolean> => {
    try {
        console.log('üß™ Probando conexi√≥n con el backend...');
        
        // Intenta obtener los eventos del backend
        const events = await homeServices.getAllEvents();
        
        console.log('‚úÖ Conexi√≥n exitosa! Eventos obtenidos:', events);
        return true;
    } catch (error) {
        console.error('‚ùå Error en la conexi√≥n con el backend:', error);
        return false;
    }
};

/**
 * Funci√≥n para mostrar informaci√≥n de depuraci√≥n de la conexi√≥n
 */
export const debugConnection = () => {
    console.log('üîç Informaci√≥n de depuraci√≥n:');
    console.log('- URL del backend: http://127.0.0.1:8000/events/');
    console.log('- M√©todo: GET');
    console.log('- Headers: Content-Type: application/json');
    console.log('- Timeout: 10 segundos');
    
    // Verificar si el backend est√° corriendo
    fetch('http://127.0.0.1:8000/events/')
        .then(response => {
            console.log('‚úÖ Backend responde correctamente');
            console.log('Status:', response.status);
            return response.json();
        })
        .then(data => {
            console.log('üìä Datos recibidos:', data);
        })
        .catch(error => {
            console.error('‚ùå No se puede conectar al backend:', error);
            console.log('üí° Aseg√∫rate de que el backend est√© corriendo en http://127.0.0.1:8000');
        });
};
