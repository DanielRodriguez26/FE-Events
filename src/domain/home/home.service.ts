import { get } from '../settings/http.service';
import { MICROSERVICES } from '../settings/environment';
import type { IPaginatedEventsResponse } from './home.interface';

// Extracci√≥n de la URL del microservicio de eventos desde la configuraci√≥n
const { event: _event } = MICROSERVICES;
const event = `${_event}`;

// Funci√≥n para obtener todos los eventos desde la API
// Retorna una promesa con la respuesta paginada de eventos
const getAllEvents = async (page: number = 1, size: number = 6): Promise<IPaginatedEventsResponse> => {
	console.log('üîç Intentando cargar eventos desde:', event, 'p√°gina:', page, 'tama√±o:', size);

	try {
		// Realiza la petici√≥n GET al endpoint de eventos con par√°metros de paginaci√≥n
		const res = get<IPaginatedEventsResponse>({
			url: `?page=${page}&size=${size}`, // Agregar par√°metros de paginaci√≥n
			baseURL: event, // Usamos la URL completa del backend
		});

		// Espera la respuesta
		const json = await res;
		console.log('‚úÖ Eventos cargados exitosamente:', json);
		return json;
	} catch (error) {
		console.error('‚ùå Error al cargar eventos:', error);
		throw error;
	}
};

// Objeto que exporta todos los servicios del m√≥dulo home
// Centraliza todas las funciones de comunicaci√≥n con la API
const homeServices = {
	getAllEvents, // Funci√≥n para obtener todos los eventos
};

export { homeServices };
